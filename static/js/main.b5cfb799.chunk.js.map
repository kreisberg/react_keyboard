{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","message","handleKeyPress","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"4NAQaA,EAAb,4MACEC,MAAyB,CACvBC,QAAS,2BAFb,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,QAAQ,4BAAD,OAA8BE,EAAME,IAApC,QAd3B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAiBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKS,UAAU,aAAf,SACE,mBAAGA,UAAU,6CAAb,SACGT,UAvBX,GAAyBU,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.b5cfb799.chunk.js","sourcesContent":["import React from 'react';\n\nimport 'bulma/css/bulma.css';\n\ntype State = {\n  message: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    message: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({ message: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <div className=\"App button\">\n        <p className=\"App__message notification is-info is-light\">\n          {message}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}